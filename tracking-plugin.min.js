(()=>{"use strict";let e="http://localhost:8080",t=`${e}/api/session`,n=`${e}/api/activity`,o=`${e}/api/session/end`,i="N2cH/ZGTyBWNhUWfcWq7+g==";function s(e,t={},o=null){console.log(i);const s={session_id:parseInt(a()),activity_data:{activity_type:e,...t},page_url:t?.page_url||window.location.href,type:e,...o||t?.type_id?{type_id:o||t?.type_id}:{}};console.log(s),console.log(o,"<<<<<<<<<<<<<<<<<<<<,updated typeId"),console.log("========"),console.log(t),console.log("========"),fetch(n,{method:"POST",headers:{"Content-Type":"application/json",apikey:i},body:JSON.stringify(s),keepalive:!0}).catch((e=>console.error("Activity tracking failed:",e)))}function c(e,t,n){const o=new Date(Date.now()+60*n*1e3).toUTCString();document.cookie=`${e}=${encodeURIComponent(t)}; expires=${o}; path=/`}function l(e){console.log("============inside getCookie============");const t=`; ${document.cookie}`,n=t.split(`; ${e}=`);if(console.log(t,"=========value========"),console.log(n,"=========parts========"),2===n.length)return decodeURIComponent(n.pop().split(";").shift())}function a(){return console.log("inside getSessionId"),console.log(l("session_id"),"<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<session id"),l("session_id")}function r(){const e="user_id";return function(e){const t=`; ${document.cookie}`.split(`; ${e}=`);if(2===t.length)return decodeURIComponent(t.pop().split(";").shift())}(e)||localStorage.getItem(e)}async function d(t){console.log(t,"<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<userId");const n="user_id";!function(e,t){const n=new Date(Date.now()+31536e6).toUTCString();document.cookie=e+"="+encodeURIComponent(t)+"; expires="+n+"; path=/"}(n,t),localStorage.setItem(n,t);const o=a();if(o)try{await async function(t,n){const o=`${e}/api/session/${t}`,s={id:parseInt(t),contact_id:n,user_agent:navigator.userAgent};try{const e=await fetch(o,{method:"PUT",headers:{"Content-Type":"application/json",apikey:i},body:JSON.stringify(s)});if(!e.ok){const t=await e.text();throw new Error(`API responded with status ${e.status}: ${t}`)}console.log(`Session ${t} updated with user ID ${n} successfully.`)}catch(e){throw console.error(`Failed to update session ${t} with user ID ${n}:`,e),e}}(o,t),s("user_login",{activity_data:{user_id:t},page_url:window.location.href,type:"user_login",type_id:null}),console.log(`User ID ${t} associated with session ${o} successfully.`)}catch(e){console.error(`Error associating user ID ${t} with session ${o}:`,e)}else console.error("No active session found. Cannot associate user ID.")}let u=null;function g(){a()||function(e){const n={ip_address:e.ip_address||null,coordinates:e.coordinates||null,city:e.city||null,state:e.state||null,country:e.country||null,user_agent:navigator.userAgent,session_start:e.session_start||(new Date).toISOString(),channel:e.channel||null,referrer:e.referrer||document.referrer,...e.contact_id&&{contact_id:r()},...e.session_end&&{session_end:e.session_end},...e.time_spent&&{time_spent:e.time_spent}};fetch(t,{method:"POST",headers:{"Content-Type":"application/json","User-Agent":navigator.userAgent,apikey:i},body:JSON.stringify(n)}).then((e=>e.json())).then((e=>{e?.data?.id&&function(e){console.log("settting session id in storage");const t="session_id";c(t,e,30),localStorage.setItem(t,e)}(e.data.id)})).catch((e=>console.error("Session tracking failed:",e)))}({contact_id:r(),ip_address:null,coordinates:null,city:null,state:null,country:null,channel:"online",referrer:document.referrer,session_start:(new Date).toISOString()}),u&&clearTimeout(u),u=setTimeout((()=>{p()}),18e5),window.addEventListener("beforeunload",p)}function p(){const e=a();e&&(console.log("ending session 1>>>>>>>>>>>>>>>>>>>",e),function(e,t=null){console.log("ending session 2>>>>>>>>>>>>>>>>>>>",e);const n={session_id:e,session_end:t?new Date(t).toISOString():(new Date).toISOString()};fetch(o,{method:"POST",headers:{"Content-Type":"application/json","User-Agent":navigator.userAgent,apikey:i},body:JSON.stringify(n)}).then((e=>e.json())).then((e=>{console.log("Session ended successfully:",e),function(){console.log("removing session from storage>>>>>>>>>>>>>>>>>>>");const e="session_id";c(e,"",-1),localStorage.removeItem(e)}()})).catch((e=>console.error("End session tracking failed:",e)))}(e))}function f(e){if(!(e instanceof Element))return null;const t=[];for(;e.nodeType===Node.ELEMENT_NODE;){let n=e.nodeName.toLowerCase();if(e.id){n+=`#${e.id}`,t.unshift(n);break}{let t=e,o=1;for(;t=t.previousElementSibling;)t.nodeName.toLowerCase()===n&&o++;1!==o&&(n+=`:nth-of-type(${o})`)}t.unshift(n),e=e.parentNode}return t.join(" > ")}function y(){(function(){const e=window.location.pathname,{category:t,identifier:n}=function(e){const t=e.split("/").filter((e=>e));return t.length>=2?{category:t[0],identifier:t.slice(1).join("/")}:{category:"home",identifier:e}}(e);s("page_view",{activity_data:{category:t,identifier:n},page_url:window.location.href,type:t,type_id:null})})(),function(){document.addEventListener("click",(function(e){const t=e.target.closest("a, button, input, select, textarea");t&&s("click",{activity_data:{tag:t.tagName.toLowerCase(),id:t.id||null,classes:t.className||null,text:t.innerText||null,x:e.clientX,y:e.clientY,selector:f(t)},page_url:window.location.href,type:"click",type_id:null})})),document.addEventListener("submit",(function(e){const t=e.target;s("form_submit",{activity_data:{id:t.id||null,classes:t.className||null,action:t.action||null,method:t.method||null,selector:f(t)},page_url:window.location.href,type:"form_submit",type_id:null})}));let e=0;window.addEventListener("scroll",(function(){const t=window.scrollY/(document.body.offsetHeight-window.innerHeight)*100;t-e>=10&&(e=t,s("scroll_depth",{activity_data:{percentage:Math.floor(t)},page_url:window.location.href,type:"scroll_depth",type_id:null}))})),document.addEventListener("visibilitychange",(function(){"hidden"===document.visibilityState?s("page_hidden",{activity_data:{},page_url:window.location.href,type:"page_hidden",type_id:null}):"visible"===document.visibilityState&&s("page_visible",{activity_data:{},page_url:window.location.href,type:"page_visible",type_id:null})}))}()}console.log("Imported setUserId:",d),function(e){try{g(),y(),e.TrackingPlugin={setUserId:function(e){console.log("TrackingPlugin.setUserId called with:",e),d(e)},trackCustomActivity:function(e,t,n){""!==e.trim()?s(e,n,t):console.error("Invalid activityType provided to trackCustomActivity.")},config:function(e){var i;e.apiUrl&&(i=e.apiUrl,i?.sessionUrl&&(t=i.sessionUrl),i?.activityUrl&&(n=i.activityUrl),i?.endSessionUrl&&(o=i.endSessionUrl),console.log("API URLs configured:",e.apiUrl))}},console.log("TrackingPlugin initialized:",e.TrackingPlugin)}catch(e){console.error("Error initializing TrackingPlugin:",e)}}(window)})();